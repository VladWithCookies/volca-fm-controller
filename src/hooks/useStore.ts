import { create, type StateCreator } from 'zustand';
import { devtools } from 'zustand/middleware';

const store: StateCreator<State> = (set) => ({
  currentOperatorId: '1',
  algorithm: 1,
  operators: {
    1: {
      coarse: 0,
      level: 99,
      mode: 'ratio',
      active: true,
      tune: 0,
      fine: 0,
      attackLevel: 99,
      decayLevel: 99,
      sustainLevel: 99,
      releaseLevel: 0,
      attackRate: 99,
      decayRate: 99,
      sustainRate: 99,
      releaseRate: 99,
    },
    2: {
      coarse: 0,
      level: 0,
      mode: 'ratio',
      active: true,
      tune: 0,
      fine: 0,
      attackLevel: 99,
      decayLevel: 99,
      sustainLevel: 99,
      releaseLevel: 0,
      attackRate: 99,
      decayRate: 99,
      sustainRate: 99,
      releaseRate: 99,
    },
    3: {
      coarse: 0,
      level: 0,
      mode: 'ratio',
      active: true,
      tune: 0,
      fine: 0,
      attackLevel: 99,
      decayLevel: 99,
      sustainLevel: 99,
      releaseLevel: 0,
      attackRate: 99,
      decayRate: 99,
      sustainRate: 99,
      releaseRate: 99,
    },
    4: {
      coarse: 0,
      level: 0,
      mode: 'ratio',
      active: true,
      tune: 0,
      fine: 0,
      attackLevel: 99,
      decayLevel: 99,
      sustainLevel: 99,
      releaseLevel: 0,
      attackRate: 99,
      decayRate: 99,
      sustainRate: 99,
      releaseRate: 99,
    },
    5: {
      coarse: 0,
      level: 0,
      mode: 'ratio',
      active: true,
      tune: 0,
      fine: 0,
      attackLevel: 99,
      decayLevel: 99,
      sustainLevel: 99,
      releaseLevel: 0,
      attackRate: 99,
      decayRate: 99,
      sustainRate: 99,
      releaseRate: 99,
    },
    6: {
      coarse: 0,
      level: 0,
      mode: 'ratio',
      active: true,
      tune: 0,
      fine: 0,
      attackLevel: 99,
      decayLevel: 99,
      sustainLevel: 99,
      releaseLevel: 0,
      attackRate: 99,
      decayRate: 99,
      sustainRate: 99,
      releaseRate: 99,
    },
  },

  setCurrentOperatorId: (currentOperatorId: string) => set({ currentOperatorId }),
  setAlgorithm: (algorithm: number) => set({ algorithm }),
  setOperatorParam: (id: string, key: string, value: number) => set((state) => ({
    operators: {
      ...state.operators,
      [id]: {
        ...state.operators[id],
        [key]: value,
      },
    },
  })),
  setCurrentOperatorParam: (key: string, value: unknown) => set((state) => ({
    operators: {
      ...state.operators,
      [state.currentOperatorId]: {
        ...state.operators[state.currentOperatorId],
        [key]: value,
      },
    },
  })),
});

const useStore = create<State>()(devtools(store));

export default useStore;
